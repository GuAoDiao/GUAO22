// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "UObject/NoExportTypes.h"
#include "GAObject01.generated.h"

/**
 *
 */
UCLASS()
class GUAO22_API UGAObject01 : public UObject
{
	GENERATED_BODY()
};


### GENERATED_BODY()
## 第一步
	GENERATED_BODY()
	// ->
	BODY_MACRO_COMBINE(CURRENT_FILE_ID, _, __LINE__, _GENERATED_BODY)
	// ->
	BODY_MACRO_COMBINE_INNER(CURRENT_FILE_ID, _, __LINE__, _GENERATED_BODY)
	// ->
	CURRENT_FILE_ID##_##__LINE__##_GENERATED_BODY
	// __LINE__ = 15
	// CURRENT_FILE_ID = GUAO22_Source_GUAO22_Public_GAObject01_h

	// ->
	GUAO22_Source_GUAO22_Public_GAObject01_h_15_GENERATED_BODY

## 第二步

### 第二步 一
public:
	GUAO22_Source_GUAO22_Public_GAObject01_h_15_PRIVATE_PROPERTY_OFFSET
	GUAO22_Source_GUAO22_Public_GAObject01_h_15_RPC_WRAPPERS_NO_PURE_DECLS
	GUAO22_Source_GUAO22_Public_GAObject01_h_15_INCLASS_NO_PURE_DECLS
	GUAO22_Source_GUAO22_Public_GAObject01_h_15_ENHANCED_CONSTRUCTORS
private:


### 第二步 二
public:
private:
	static void StaticRegisterNativesUGAObject01();
	friend struct Z_Construct_UClass_UGAObject01_Statics;
public:
	DECLARE_CLASS(UGAObject01, UObject, COMPILED_IN_FLAGS(0), CASTCLASS_None, TEXT("/Script/GUAO22"), NO_API)
	DECLARE_SERIALIZER(UGAObject01)
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UGAObject01(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { };
private:
	/** Private move- and copy-constructors, should never be used */
	NO_API UGAObject01(UGAObject01&&);
	NO_API UGAObject01(const UGAObject01&);
public:
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UGAObject01);
	DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UGAObject01);
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UGAObject01)

## 第三步

## 第三步 一
	// DECLARE_CLASS(UGAObject01, UObject, COMPILED_IN_FLAGS(0), CASTCLASS_None, TEXT("/Script/GUAO22"), NO_API)
	// DECLARE_CLASS( TClass, TSuperClass, TStaticFlags, TStaticCastFlags, TPackage, TRequiredAPI  )
private:
	UGAObject01& operator=(UGAObject01&&);
	UGAObject01& operator=(const UGAObject01&);
	NO_API static UClass* GetPrivateStaticClass();
public:
	/** Bitwise union of #EClassFlags pertaining to this class.*/
	enum { StaticClassFlags = COMPILED_IN_FLAGS(0) };
	/** Typedef for the base class ({{ typedef-type }}) */
	typedef UObject Super;
	/** Typedef for {{ typedef-type }}. */
	typedef UGAObject01 ThisClass;
	/** Returns a UClass object representing this class at runtime */
	inline static UClass* StaticClass()
	{
		return GetPrivateStaticClass();
	}
	/** Returns the package this class belongs in */
	inline static const TCHAR* StaticPackage()
	{
		return TEXT("/Script/GUAO22");
	}
	/** Returns the static cast flags for this class */
	inline static EClassCastFlags StaticClassCastFlags()
	{
		return CASTCLASS_None;
	}
	/** For internal use only; use StaticConstructObject() to create new objects. */
	inline void* operator new(const size_t InSize, EInternal InInternalOnly, UObject* InOuter = (UObject*)GetTransientPackage(), FName InName = NAME_None, EObjectFlags InSetFlags = RF_NoFlags)
	{
		return StaticAllocateObject(StaticClass(), InOuter, InName, InSetFlags);
	}
	/** For internal use only; use StaticConstructObject() to create new objects. */
	inline void* operator new( const size_t InSize, EInternal* InMem )
	{
		return (void*)InMem;
	}

## 第三步 二
	// DECLARE_SERIALIZER(UGAObject01)
	// DECLARE_SERIALIZER( TClass )
	friend FArchive &operator<<( FArchive& Ar, UGAObject01*& Res )
	{
		return Ar << (UObject*&)Res;
	}
	friend void operator<<(FStructuredArchive::FSlot InSlot, UGAObject01*& Res)
	{
		InSlot << (UObject*&)Res;
	}

## 第三步 三
	// DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UGAObject01);
	// DECLARE_VTABLE_PTR_HELPER_CTOR(API, TClass)
	/** DO NOT USE. This constructor is for internal usage only for hot-reload purposes. */
	NO_API UGAObject01(FVTableHelper& Helper);

## 第三步 四
	// DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UGAObject01);
	// DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(TClass)

#if WITH_HOT_RELOAD
	static UObject* __VTableCtorCaller(FVTableHelper& Helper)
	{
		return new (EC_InternalUseOnlyConstructor, (UObject*)GetTransientPackage(), NAME_None, RF_NeedLoad | RF_ClassDefaultObject | RF_TagGarbageTemp) UGAObject01(Helper);
	}
#else
	static UObject* __VTableCtorCaller(FVTableHelper& Helper)
	{
		return nullptr;
	}
#endif


## 第三步 五
	// DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UGAObject01)
	// #define DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(TClass)
	static void __DefaultConstructor(const FObjectInitializer& X) { new((EInternal*)X.GetObj())UGAObject01(X); }

## 第三步 终
public:
private:
	static void StaticRegisterNativesUGAObject01();
	friend struct Z_Construct_UClass_UGAObject01_Statics;
public:
private:
	UGAObject01& operator=(UGAObject01&&);
	UGAObject01& operator=(const UGAObject01&);
	NO_API static UClass* GetPrivateStaticClass();
public:
	/** Bitwise union of #EClassFlags pertaining to this class.*/
	enum { StaticClassFlags = COMPILED_IN_FLAGS(0) };
	/** Typedef for the base class ({{ typedef-type }}) */
	typedef UObject Super;
	/** Typedef for {{ typedef-type }}. */
	typedef UGAObject01 ThisClass;
	/** Returns a UClass object representing this class at runtime */
	inline static UClass* StaticClass()
	{
		return GetPrivateStaticClass();
	}
	/** Returns the package this class belongs in */
	inline static const TCHAR* StaticPackage()
	{
		return TEXT("/Script/GUAO22");
	}
	/** Returns the static cast flags for this class */
	inline static EClassCastFlags StaticClassCastFlags()
	{
		return CASTCLASS_None;
	}
	/** For internal use only; use StaticConstructObject() to create new objects. */
	inline void* operator new(const size_t InSize, EInternal InInternalOnly, UObject* InOuter = (UObject*)GetTransientPackage(), FName InName = NAME_None, EObjectFlags InSetFlags = RF_NoFlags)
	{
		return StaticAllocateObject(StaticClass(), InOuter, InName, InSetFlags);
	}
	/** For internal use only; use StaticConstructObject() to create new objects. */
	inline void* operator new(const size_t InSize, EInternal* InMem)
	{
		return (void*)InMem;
	}
	
	friend FArchive &operator<<(FArchive& Ar, UGAObject01*& Res)
	{
		return Ar << (UObject*&)Res;
	}
	friend void operator<<(FStructuredArchive::FSlot InSlot, UGAObject01*& Res)
	{
		InSlot << (UObject*&)Res;
	}

	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UGAObject01(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { };
private:
	/** Private move- and copy-constructors, should never be used */
	NO_API UGAObject01(UGAObject01&&);
	NO_API UGAObject01(const UGAObject01&);
public:
	NO_API UGAObject01(FVTableHelper& Helper);

#if WITH_HOT_RELOAD
	static UObject* __VTableCtorCaller(FVTableHelper& Helper)
	{
		return new (EC_InternalUseOnlyConstructor, (UObject*)GetTransientPackage(), NAME_None, RF_NeedLoad | RF_ClassDefaultObject | RF_TagGarbageTemp) UGAObject01(Helper);
	}
#else
	static UObject* __VTableCtorCaller(FVTableHelper& Helper)
	{
		return nullptr;
	}
#endif

	static void __DefaultConstructor(const FObjectInitializer& X) { new((EInternal*)X.GetObj())UGAObject01(X); }
