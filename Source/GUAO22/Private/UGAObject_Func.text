

/// 1
DECLARE_FUNCTION(execTestFunc)
{
	P_FINISH;
	P_NATIVE_BEGIN;
	P_THIS->TestFunc();
	P_NATIVE_END;
}


/// 2
DECLARE_FUNCTION(execTestFunc)

// This macro is used to declare a thunk function in autogenerated boilerplate code
// #define DECLARE_FUNCTION(func) static void func( UObject* Context, FFrame& Stack, RESULT_DECL )
// ->

static void execTestFunc( UObject* Context, FFrame& Stack, RESULT_DECL )

// #define RESULT_DECL void*const RESULT_PARAM
// ->
static void execTestFunc( UObject* Context, FFrame& Stack, void*const RESULT_PARAM)

// #define RESULT_PARAM Z_Param__Result
// ->

static void execTestFunc(UObject* Context, FFrame& Stack, void*const Z_Param__Result)
{

}

/// 3

P_FINISH;
P_NATIVE_BEGIN;
P_THIS->TestFunc();
P_NATIVE_END;


// #define P_FINISH									Stack.Code += !!Stack.Code; /* increment the code ptr unless it is null */
// ->
Stack.Code += !!Stack.Code; 
P_NATIVE_BEGIN;
P_THIS->TestFunc();
P_NATIVE_END;

// #define P_NATIVE_BEGIN { SCOPED_SCRIPT_NATIVE_TIMER(ScopedNativeCallTimer);
// #define P_NATIVE_END   }
// ->

Stack.Code += !!Stack.Code; 
{ 
	SCOPED_SCRIPT_NATIVE_TIMER(ScopedNativeCallTimer);
	P_THIS->TestFunc();
}

// #define P_THIS										P_THIS_CAST(ThisClass)
// ThisClass 前文类展开时候定义的, 值为当前类 UGAObject30
// ->

Stack.Code += !!Stack.Code; 
{ 
	SCOPED_SCRIPT_NATIVE_TIMER(ScopedNativeCallTimer);
	P_THIS_CAST(UGAObject30)->TestFunc();
}

// #define P_THIS_CAST(ClassType)						((ClassType*)P_THIS_OBJECT)
// ->

Stack.Code += !!Stack.Code; 
{ 
	SCOPED_SCRIPT_NATIVE_TIMER(ScopedNativeCallTimer);
	((UGAObject30*)P_THIS_OBJECT)->TestFunc();
}

// #define P_THIS_OBJECT								(Context)
// ->
Stack.Code += !!Stack.Code; 
{ 
	SCOPED_SCRIPT_NATIVE_TIMER(ScopedNativeCallTimer);
	((UGAObject30*)(Context))->TestFunc();
}

/// 4
static void execTestFunc(UObject* Context, FFrame& Stack, void*const Z_Param__Result)
{
	Stack.Code += !!Stack.Code; 
	{ 
		SCOPED_SCRIPT_NATIVE_TIMER(ScopedNativeCallTimer);
		((UGAObject30*)(Context))->TestFunc();
	}
}



//////////////////////////////////////////////////////////////////////////
DECLARE_FUNCTION(execTestFunction) \
{ \
	P_FINISH; \
	P_NATIVE_BEGIN; \
	*(int32*)Z_Param__Result=P_THIS->TestFunction(); \
	P_NATIVE_END; \
}

static void execTestFunc(UObject* Context, FFrame& Stack, void*const Z_Param__Result)
{
	Stack.Code += !!Stack.Code; 
	{ 
		SCOPED_SCRIPT_NATIVE_TIMER(ScopedNativeCallTimer);
		*(int32*)Z_Param__Result = ((UGAObject34*)(Context))->TestFunc();
	}
}


int32 Test;
&Test = int32 * = void*;

int32* = &int32Value;
*(int32*)= int32Value;

即 Test = int32Value = FuncResult;


//////////////////////////////////////////////////////////////////////////
DECLARE_FUNCTION(execTestFunction)
{
	P_GET_PROPERTY(UIntProperty,Z_Param_Test);
	P_FINISH;
	P_NATIVE_BEGIN;
	P_THIS->TestFunction(Z_Param_Test);
	P_NATIVE_END;
}

// P_GET_PROPERTY(UIntProperty,Z_Param_Test);
// #define P_GET_PROPERTY(PropertyType, ParamName)													\
	PropertyType::TCppType ParamName = PropertyType::GetDefaultPropertyValue();					\
	Stack.StepCompiledIn<PropertyType>(&ParamName);
// ->


static void execTestFunc(UObject* Context, FFrame& Stack, void*const Z_Param__Result)
{
	UIntProperty::TCppType Z_Param_Test = UIntProperty::GetDefaultPropertyValue();					\
	Stack.StepCompiledIn<UIntProperty>(&Z_Param_Test);

	Stack.Code += !!Stack.Code; 
	{ 
		SCOPED_SCRIPT_NATIVE_TIMER(ScopedNativeCallTimer);
		((UGAObject36*)(Context))->TestFunc(Z_Param_Test);
	}
}

//////////////////////////////////////////////////////////////////////////
DECLARE_FUNCTION(execTestFunction)
{
	P_GET_PROPERTY_REF(UIntProperty,Z_Param_Out_Test);
	P_FINISH;
	P_NATIVE_BEGIN;
	P_THIS->TestFunction(Z_Param_Out_Test);
	P_NATIVE_END;
}

// P_GET_PROPERTY_REF(UIntProperty,Z_Param_Out_Test);
// #define P_GET_PROPERTY_REF(PropertyType, ParamName)												\
	PropertyType::TCppType ParamName##Temp = PropertyType::GetDefaultPropertyValue();			\
	PropertyType::TCppType& ParamName = Stack.StepCompiledInRef<PropertyType, PropertyType::TCppType>(&ParamName##Temp);
// ->
static void execTestFunc(UObject* Context, FFrame& Stack, void*const Z_Param__Result)
{
	UIntProperty::TCppType Z_Param_Out_TestTemp = UIntProperty::GetDefaultPropertyValue();
	UIntProperty::TCppType& Z_Param_Out_Test = Stack.StepCompiledInRef<UIntProperty, UIntProperty::TCppType>(&Z_Param_Out_TestTemp);

	Stack.Code += !!Stack.Code; 
	{ 
		SCOPED_SCRIPT_NATIVE_TIMER(ScopedNativeCallTimer);
		((UGAObject37*)(Context))->TestFunc(Z_Param_Test);
	}
}

//////////////////////////////////////////////////////////////////////////

DECLARE_FUNCTION(execTestFunction) 
{ 
	P_GET_PROPERTY(UIntProperty,Z_Param_Test); 
	P_GET_PROPERTY(UFloatProperty,Z_Param_Test2); 
	P_FINISH; 
	P_NATIVE_BEGIN; 
	P_THIS->TestFunction(Z_Param_Test,Z_Param_Test2); 
	P_NATIVE_END;
}
	
// ->

static void execTestFunc(UObject* Context, FFrame& Stack, void*const Z_Param__Result)
{
	UIntProperty::TCppType Z_Param_Test = UIntProperty::GetDefaultPropertyValue();
	Stack.StepCompiledIn<UIntProperty>(&Z_Param_Test);

	UFloatProperty::TCppType Z_Param_Test2 = UFloatProperty::GetDefaultPropertyValue();
	Stack.StepCompiledIn<UFloatProperty>(&Z_Param_Test2);
	
	Stack.Code += !!Stack.Code; 
	{ 
		SCOPED_SCRIPT_NATIVE_TIMER(ScopedNativeCallTimer);
		((UGAObject38*)(Context))->TestFunc(Z_Param_Test, Z_Param_Test2);
	}
}

//////////////////////////////////////////////////////////////////////////
DECLARE_FUNCTION(execTestFunction) 
{ 
	P_GET_PROPERTY(UIntProperty,Z_Param_Test); 
	P_GET_PROPERTY(UFloatProperty,Z_Param_Test2); 
	P_FINISH; 
	P_NATIVE_BEGIN; 
	*(bool*)Z_Param__Result=P_THIS->TestFunction(Z_Param_Test,Z_Param_Test2);
	P_NATIVE_END;
}
	
// ->

static void execTestFunc(UObject* Context, FFrame& Stack, void*const Z_Param__Result)
{
	UIntProperty::TCppType Z_Param_Test = UIntProperty::GetDefaultPropertyValue();
	Stack.StepCompiledIn<UIntProperty>(&Z_Param_Test);

	UFloatProperty::TCppType Z_Param_Test2 = UFloatProperty::GetDefaultPropertyValue();
	Stack.StepCompiledIn<UFloatProperty>(&Z_Param_Test2);
	
	Stack.Code += !!Stack.Code; 
	{ 
		SCOPED_SCRIPT_NATIVE_TIMER(ScopedNativeCallTimer);
		*(int32*)Z_Param__Result = ((UGAObject39*)(Context))->TestFunc(Z_Param_Test, Z_Param_Test2);
	}
}


//////////////////////////////////////////////////////////////////////////

DECLARE_FUNCTION(execServerTestFunc)
{
	P_FINISH;
	P_NATIVE_BEGIN;
	if (!P_THIS->ServerTestFunc_Validate())
	{
		RPC_ValidateFailed(TEXT("ServerTestFunc_Validate"));
		return;
	}
	P_THIS->ServerTestFunc_Implementation();
	P_NATIVE_END;
}

// ->

static void execTestFunc(UObject* Context, FFrame& Stack, void*const Z_Param__Result)
{
	Stack.Code += !!Stack.Code; 
	{ 
		SCOPED_SCRIPT_NATIVE_TIMER(ScopedNativeCallTimer);


		if (!((UGAObject40*)(Context))->ServerTestFunc_Validate())
		{
			RPC_ValidateFailed(TEXT("ServerTestFunc_Validate"));
			return;
		}
		((UGAObject40*)(Context))->ServerTestFunc_Implementation();
	}
}

